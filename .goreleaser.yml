builds:
- env:
    # goreleaser does not work with CGO, it could also complicate
    # usage by users in CI/CD systems like Terraform Cloud where
    # they are unable to install libraries.
    - CGO_ENABLED=0
  mod_timestamp: '{{ .CommitTimestamp }}'
  flags:
    - -trimpath
  ldflags:
    - '-s -w -X main.version={{.Version}} -X main.commit={{.Commit}}'
  goos:
    - windows
    - linux
    - darwin
  goarch:
    - amd64
  binary: '{{ .ProjectName }}_{{ .Version }}'
archives:
  - replacements:
      darwin: Darwin
      linux: Linux
      windows: Windows
      386: i386
      amd64: x86_64
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ .Tag }}-next"
# signs:
#   - artifacts: checksum
#     args:
#       # if you are using this is a GitHub action or some other automated pipeline, you 
#       # need to pass the batch flag to indicate its not interactive.
#       - "--batch"
#       - "--local-user"
#       - "{{ .Env.GPG_FINGERPRINT }}" # set this environment variable for your signing key
#       - "--output"
#       - "${signature}"
#       - "--detach-sign"
#       - "${artifact}"
release:
# Repo in which the release will be created.
# Default is extracted from the origin remote URL or empty if its private hosted.
  github:
    owner: enthought
    name: terraform-provider-appveyor

  # If set to true, will not auto-publish the release.
  # Default is false.
  draft: false

  prerelease: auto

  # Header template for the release body.
  # Defaults to empty.
  header: |
    ## New Provider Release ({{ .Date }})

  # Footer template for the release body.
  # Defaults to empty.
  footer: |
    ## Thanks!

    Those were the changes on {{ .Tag }}!

  # You can change the name of the release.
  # Default is `{{.Tag}}` on OSS and `{{.PrefixedTag}}` on Pro.
  name_template: "{{.ProjectName}} v{{.Version}}"

changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
